local lib = loadstring(game:HttpGet"https://raw.githubusercontent.com/dawid-scripts/UI-Libs/main/Vape.txt")()

local win = lib:Window("PREVIEW",Color3.fromRGB(44, 120, 224), Enum.KeyCode.RightControl)

local Main = win:Tab("Main")

local Extra = win:Tab("Extra")

lib:Notification("Astro#5852", "                     discord.gg/                   p9ZNv9sNDx ", "ok!")



Main:Toggle("inf exp , diamonds , money , skills",false, function(t)
		getgenv().idk = t
				while getgenv().idk == true do
				local value = {
				"money",
				"diamond",
				"skill",
				"exp",
				}
				while true do 
				for jaff = 1, 1000000000 do task.wait()
				for i , v in pairs(value) do
				local args = {
				   [1] = "getLevelUpRewards",
				   [2] = {
				       ["category"] = v
				   }
				}
				
				game:GetService("ReplicatedStorage").events.RemoteFunction_playerInfo:InvokeServer(unpack(args))
				task.wait()
				end
				end
				end
		end
end)



Main:Slider("WalkSpeed",0,200,0,function(t)
    getgenv().WS = t
end)


Main:Toggle("WalkSpeed",false, function(t)
    getgenv().WSon = t
    while getgenv().WSon == true do
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = getgenv().WS
    wait()
    end
    while getgenv().WSon == false do
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
    wait()
    end
end)

Main:Slider("Jump power (1st jump)",0,200,0,function(t)
    getgenv().JP = t
end)


Main:Toggle("JumpPower",false, function(t)
    getgenv().JPon = t
    while getgenv().JPon == true  do
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = getgenv().JP
    
wait()
    
end
   while getgenv().JPon == false  do
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
    wait()
    
end
end)




Extra:Slider("Wait Interval (dumb ui doesnt show decimals)",0.005,1,0, function(t)
_G.waitinterval = t
print(_G.waitinterval)
end)

Extra:Toggle("TpWalk / NoClip bypass",false, function(t)
		getgenv().Run = t
if getgenv().Run == true then
		while  getgenv().Run == true do 
    plyr.CFrame = plyr.CFrame + plyr.CFrame.lookVector * 1
    plyr.CFrame = plyr.CFrame + plyr.CFrame.lookVector * 1
    plyr.CFrame = plyr.CFrame + plyr.CFrame.lookVector * 1
    
wait(_G.waitinterval)
    end
end
end)

Extra:Slider("inf jump jump height",0,200,0, function(t)
_G.JumpHeight = t
print(_G.JumpHeight)
end)



Extra:Toggle("Inf Jump",false, function(t)
    local Player = game:GetService'Players'.LocalPlayer;
    local UIS = game:GetService'UserInputService';
    
    function Action(Object, Function) if Object ~= nil then Function(Object); end end
    
    UIS.InputBegan:connect(function(UserInput)
        if UserInput.UserInputType == Enum.UserInputType.Keyboard and UserInput.KeyCode == Enum.KeyCode.Space then
            Action(Player.Character.Humanoid, function(self)
                if self:GetState() == Enum.HumanoidStateType.Jumping or self:GetState() == Enum.HumanoidStateType.Freefall then
                    Action(self.Parent.HumanoidRootPart, function(self)
                        self.Velocity = Vector3.new(0, _G.JumpHeight, 0);
                    end)
                end
            end)
        end
    end)
end)
